{"version":3,"sources":["fast-recorder.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","audioBuffer","options","ctx","source","node","analyser","recording","silenceStart","iterator","getaudioContext","window","AudioContext","webkitAudioContext","stopAnalysing","disconnect","resumeAnalysing","connect","context","destination","beginAnalyse","stream","silenceConfig","onSilence","err","console","log","toString","createMediaStreamSource","createScriptProcessor","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","sampleRate","initSampleRate","addEventListener","audioProcessingEvent","info","whileRecording","inputBuffer","getChannelData","analyse","playbackTime","fftSize","bufferLength","dataArray","Uint8Array","amplitude","time","getByteTimeDomainData","curr_value_time","Date","now","current","elapsedTime","buffer","recordSampleRate","push","rate","clean","floatTo16BitPCM","output","offset","input","s","Math","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","exportBuffer","exportSampleRate","mergedBuffers","mergeBuffers","downsampledBuffer","downsampleBuffer","encodedWav","encodeWAV","audioBlob","Blob","type","bufferArray","result","Float32Array","set","sampleRateRatio","newLength","round","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","samples","ArrayBuffer","DataView","setUint32","setUint16","exportBufferAsBlob","checkMediaDevice","Promise","resolve","reject","navigator","mediaDevices","getUserMedia","audio","then","catch","global","FastRecorder","audioRecorder","self","helpers","Analyser","sampleAudio","AudioRecorder","Chunks","blob","Url","Audio","AudioLength","mediaRecorder","recordStopped","isPaused","test","silenceDetectionTime","silenceDetectionAmplitude","reSampleRate","speechSynthesisCounter","speechSynthesisCounterPrevious","speechSynthesisInstances","prototype","getCount","configureSilence","silenceDetectionConfig","hasOwnProperty","startRecording","onStart","onHappening","MediaRecorder","start","JSON","stringify","event","silenceDetected","parseFloat","toFixed","data","interval","setInterval","capturedData","requestData","clearInterval","error","stopRecording","onStop","stop","URL","createObjectURL","restart","onRestart","isSilentAudio","fileUrl","play","duration","captureStream","exportAsBlob","exportResampledAudio","onComplete","reader","FileReader","decodeAudioData","samplingRate","reSampleBuffer","newBuffer","arrayBuffer","convertFloat32ToInt16","readAsArrayBuffer","exportAsMP3","name","file","File","pause","onPause","resume","onResume","playAudio","url","speakText","payload","onFinish","text","undefined","speechSynthesis","synth","utterance","SpeechSynthesisUtterance","volume","lang","pitch","onvoiceschanged","voices","getVoices","voice","filter","speak","dispatchEvent","Event","cancel","reSample","targetSampleRate","channel","numberOfChannels","offlineContext","OfflineAudioContext","bufferSource","createBufferSource","startRendering","renderedBuffer","l","buf","Int16Array"],"mappings":"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","file":"fast-recorder-transpiled.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function () {\n    //'use strict';\n\n    var audioBuffer= require('./audioBuffer')()\n\nmodule.exports= function (options) {\n    var options= options || {}\n    var ctx,source,node,analyser,recording=true;\n    var silenceStart,iterator=0;\n\n    function getaudioContext() {\n        if(window.AudioContext || window.webkitAudioContext){\n            return new AudioContext()\n        }\n        throw new Error('audio context unavailable within this browser...')\n    }\n\n    function stopAnalysing(){\n        recording=false\n        analyser.disconnect()\n        node.disconnect()\n    }\n\n    function resumeAnalysing(){\n        recording=true\n        iterator= 0\n        analyser.connect(node)\n        node.connect(source.context.destination)\n    }\n\n    function beginAnalyse(stream,silenceConfig,onSilence){\n            var onSilence = onSilence || function(){/* nothing to do*/}\n\n            try{\n                ctx= getaudioContext()\n            }catch(err){\n                \n                console.log(err.toString())\n                return;\n            }\n            \n            source= ctx.createMediaStreamSource(stream)\n            node= source.context.createScriptProcessor(4096,1,1)\n            analyser= source.context.createAnalyser();\n            analyser.minDecibels = -90;\n            analyser.maxDecibels = -10;\n            analyser.smoothingTimeConstant = 0.85;\n    \n            source.connect(analyser)\n            analyser.connect(node)\n            node.connect(source.context.destination);\n            \n            console.log('source.context.sampleRate= ' + source.context.sampleRate)\n            audioBuffer.initSampleRate(source.context.sampleRate);\n            \n            console.log('analyse audio...')\n            node.addEventListener('audioprocess',function (audioProcessingEvent) { \n                console.log('process')\n                /*if(!recording){\n                    analyser.disconnect()\n                    node.disconnect()\n                    return;\n                }*/\n            \n                console.info('processing audio...')\n                //console.log(audioProcessingEvent)\n\n                audioBuffer.whileRecording(audioProcessingEvent.inputBuffer.getChannelData(0))\n\n                analyse(silenceConfig,onSilence,audioProcessingEvent.playbackTime)\n            })\n            \n    }\n\n    function analyse(silenceConfig,onSilence,playbackTime){\n        // write analyse function\n      analyser.fftSize = 2048;\n      var bufferLength = analyser.fftSize;\n      var dataArray = new Uint8Array(bufferLength);\n      var amplitude = silenceConfig.amplitude;\n      var time = silenceConfig.time;\n      \n      //console.log(dataArray)\n      analyser.getByteTimeDomainData(dataArray);\n      //console.log(dataArray)\n      \n      for (var i = 0; i < bufferLength; i++) {\n        // Normalize between -1 and 1.\n        var curr_value_time = (dataArray[i] / 128) - 1.0;\n        //console.log(curr_value_time)\n        if (curr_value_time > amplitude || curr_value_time < (-1 * amplitude)) {\n            silenceStart = Date.now();\n        }\n      }\n      \n      //console.log(Date.now())\n      var current = Date.now();\n      if(iterator===0)\n        silenceStart= current\n\n      var elapsedTime = current - silenceStart;\n      /*console.log(elapsedTime)\n      console.log(current)\n      console.log(silenceStart)\n      console.log(time)*/\n      console.log('elapsed time: ' + elapsedTime)\n      console.log('time: ' + time)\n      console.log(iterator)\n\n      if (elapsedTime > time) {\n        // handle detected silence\n        //console.log('silence detected...')\n        //console.log('elapsed time: '+ elapsedTime)\n        \n        // reinitialise iterator for eventual upcoming recordings\n        iterator=0\n        // call the callback \n        onSilence(true,playbackTime)\n        return;\n      }\n\n      // to define how much silences were detected we could reset iterator to 0 \n      // and start counting once a new silence is detected\n\n      iterator++;\n    }\n\n    return {\n        beginAnalyse: beginAnalyse,\n        stopAnalysing: stopAnalysing,\n        resumeAnalysing: resumeAnalysing\n    }\n}\n})()\n},{\"./audioBuffer\":2}],2:[function(require,module,exports){\n//(function(){\n\nvar buffer=[],bufferLength=0,recordSampleRate;\n\nmodule.exports= function(options){\n    'use strict';\n    options= options || {}\n\n    \n    function whileRecording(inputBuffer){\n        //console.log(inputBuffer)\n        buffer.push(inputBuffer);\n        bufferLength += inputBuffer.length;\n        //console.log(bufferLength)\n    }\n\n    function initSampleRate(rate){\n        recordSampleRate= rate\n    }\n\n    function clean() {\n        bufferLength = 0;\n        buffer = [];\n    }\n\n    function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n    \n    function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i++) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    function exportBuffer(exportSampleRate) {\n        var mergedBuffers = mergeBuffers(buffer, bufferLength);\n        console.log('merged buffers: ' + mergeBuffers);\n        var downsampledBuffer = downsampleBuffer(mergedBuffers, exportSampleRate);\n        console.log(downsampleBuffer)\n        var encodedWav = encodeWAV(downsampledBuffer);\n        //return encodedWav;\n        var audioBlob = new Blob([encodedWav], {type: 'application/octet-stream'});\n        return audioBlob\n    }\n\n    function mergeBuffers(bufferArray,bufferLength){\n        // TO DO\n        console.log('bbb length: ' + bufferLength)\n        var result = new Float32Array(bufferLength);\n        var offset = 0;\n        for (var i = 0; i < bufferArray.length; i++) {\n        result.set(bufferArray[i], offset);\n        offset += bufferArray[i].length;\n        }\n        return result;\n    }\n\n    function downsampleBuffer(buffer, exportSampleRate){\n         // TO DO   \n         if (exportSampleRate === recordSampleRate) {\n            return buffer;\n          }\n          var sampleRateRatio = recordSampleRate / exportSampleRate;\n          var newLength = Math.round(buffer.length / sampleRateRatio);\n          var result = new Float32Array(newLength);\n          var offsetResult = 0;\n          var offsetBuffer = 0;\n          while (offsetResult < result.length) {\n            var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n            var accum = 0,\n              count = 0;\n            for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n              accum += buffer[i];\n              count++;\n            }\n            result[offsetResult] = accum / count;\n            offsetResult++;\n            offsetBuffer = nextOffsetBuffer;\n          }\n\n          console.log('res: ' + result)\n          return result;\n    }\n\n    function encodeWAV(samples){\n        // TO DO\n        var buffer = new ArrayBuffer(44 + samples.length * 2);\n        var view = new DataView(buffer);\n\n        writeString(view, 0, 'RIFF');\n        view.setUint32(4, 32 + samples.length * 2, true);\n        writeString(view, 8, 'WAVE');\n        writeString(view, 12, 'fmt ');\n        view.setUint32(16, 16, true);\n        view.setUint16(20, 1, true);\n        view.setUint16(22, 1, true);\n        view.setUint32(24, recordSampleRate, true);\n        view.setUint32(28, recordSampleRate * 2, true);\n        view.setUint16(32, 2, true);\n        view.setUint16(34, 16, true);\n        writeString(view, 36, 'data');\n        view.setUint32(40, samples.length * 2, true);\n        floatTo16BitPCM(view, 44, samples);\n\n        return view;\n    }\n\n    return {\n         whileRecording: whileRecording,\n         initSampleRate:initSampleRate,\n         exportBufferAsBlob: exportBuffer\n    }\n}\n//})();\n},{}],3:[function(require,module,exports){\n(function () {\n'use strict';\n\nexports.checkMediaDevice= () =>{\n    return new Promise(function(resolve,reject){\n        if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia){\n            navigator.mediaDevices.getUserMedia({audio: true}).then(function(stream){\n                   resolve(stream)\n            })\n            .catch(function (err) {\n                console.info('error get user media: '+ err)\n                reject('err: '+ err)\n            })\n         }\n         else\n            reject('no existing media device in this browser')\n    })\n}\n\n})()\n\n\n\n},{}],4:[function(require,module,exports){\n(function (global){\n/**\n * @module main\n * @description The global namespace for the audio recorder\n */\n\n\nglobal.FastRecorder= global.FastRecorder || {}\nglobal.FastRecorder.audioRecorder= require('./recorder')\n//global.FastRecorder.firebaseStorage= require('./platforms/firebaseStore')\nmodule.exports= global.FastRecorder\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./recorder\":5}],5:[function(require,module,exports){\n'use strict';\nvar helpers = require('./helpers')\nvar Analyser= require('./analyser')()\nvar audioBuffer= require('./audioBuffer')()\nvar sampleAudio= require('./sampleAudio')();\n\n\n// to trim recorded audio from silent parts we should detect within which parts while the recording the silence was\n// detected and how much it  lasted, then we can remove the chunks contained in that part of the recording\n\n\nfunction AudioRecorder(options){\n    var options = {} || options\n    this.context= new AudioContext()\n    this.Chunks= []\n    this.Blob= options.blob|| null\n    this.Url= options.Url || null\n    this.Audio= options.Audio || null\n    this.AudioLength= 0\n    this.mediaRecorder= null\n    this.recordStopped= false\n    this.elapsedTime= 0\n    this.isPaused= false\n    this.test= 'test prototype'\n    this.silenceDetectionTime=3000\n    this.silenceDetectionAmplitude= 0.2\n    this.reSampleRate= 16000\n    this.speechSynthesisCounter=0\n    this.speechSynthesisCounterPrevious=0\n\n    AudioRecorder.speechSynthesisInstances++\n\n}\n\nAudioRecorder.speechSynthesisInstances=0\n\nAudioRecorder.prototype.getCount= function(){\n    return AudioRecorder.speechSynthesisInstances\n}\n\n\nAudioRecorder.prototype.configureSilence= function (silenceDetectionConfig){\n       var self=this;\n       silenceDetectionConfig = silenceDetectionConfig || {};\n       this.silenceDetectionTime= silenceDetectionConfig.hasOwnProperty('time')?\n                                                            silenceDetectionConfig.time:this.silenceDetectionTime\n       this.silenceDetectionAmplitude= silenceDetectionConfig.hasOwnProperty('amplitude')?\n                                                                    silenceDetectionConfig.amplitude:this.silenceDetectionAmplitude\n}\n\n\nAudioRecorder.prototype.startRecording = function (onStart,onSilence,onHappening) {\n     var self= this;\n      console.log(this.test)\n      helpers.checkMediaDevice().then(function(stream){\n        console.log(stream)\n        self.mediaRecorder= new MediaRecorder(stream)\n        self.mediaRecorder.start()\n        console.log(JSON.stringify(self.mediaRecorder))\n        \n        // media recorder events\n        self.mediaRecorder.addEventListener('start',function (event) {\n            console.info('beginning recording...')\n            if(typeof onStart=== 'function')\n                  onStart()\n           \n            Analyser.beginAnalyse(stream,{\n                time: self.silenceDetectionTime,\n                amplitude: self.silenceDetectionAmplitude\n            },function(silenceDetected,playbackTime){\n                   if(silenceDetected){\n                        if(typeof onSilence=== 'function'){\n                            playbackTime= parseFloat(playbackTime.toFixed(2))\n                            onSilence(playbackTime)\n                        }\n                            \n                   }\n            })\n\n        })\n\n        self.mediaRecorder.addEventListener('dataavailable',function(event){\n            console.log(JSON.stringify(event))\n            console.log(event.data)\n            self.Chunks.push(event.data)\n            console.info('recorder collecting data...')\n            self.elapsedTime= self.elapsedTime+ 100 \n            self.AudioLength= self.elapsedTime\n            onHappening((self.elapsedTime/1000).toFixed(2))\n        })\n\n        var interval= setInterval(function(){\n            try{\n                if(!self.isPaused){\n                    var capturedData= self.mediaRecorder.requestData()\n                }\n            }\n            catch(err){\n                clearInterval(interval)\n            }\n        },100)\n\n      })\n      .catch(function(){\n          console.error(err)\n      })\n}\n\nAudioRecorder.prototype.stopRecording= function (onStop) {\n    console.log(this.test)\n    var self=this\n    if(self.mediaRecorder){\n        self.mediaRecorder.stop()\n        self.mediaRecorder.addEventListener(\"stop\", function(){\n            Analyser.stopAnalysing()\n            //self.Blob = audioBuffer.exportBufferAsBlob(16000)\n            self.mediaRecorder= null;\n            self.Blob= new Blob(self.Chunks,{type:'audio/x-l16'})\n            self.Url = URL.createObjectURL(self.Blob);\n\n            // reinitialize counter\n            self.AudioLength= 0\n            self.elapsedTime= 0\n\n            console.info('recorder stopped')\n            if(onStop && typeof onStop === 'function'){\n                onStop(null,self.Blob,self.Url)\n                self.Chunks= []\n                return;\n            }\n            \n            // reinitialize data chunks on stopping\n            self.Chunks= []\n        });\n    }\n    else{\n        onStop('media recorder isn\\'t started yet or it is already stopped')\n    }\n\n}\n\nAudioRecorder.prototype.restart= function (onRestart,onSilence,onHappening) {\n    if(this.mediaRecorder){\n        this.stopRecording(()=>{\n            this.startRecording(onRestart,onSilence,onHappening)\n        })\n    }\n    else{\n        onRestart('no recording started yet')\n    }\n}\n\nAudioRecorder.prototype.isSilentAudio= function (fileUrl,onSilence) {\n    //TO DO\n    var self=this;\n\n    self.Audio= new Audio(self.Url)\n    //var stream= new MediaStream()\n    console.log(self.Audio)\n    self.Audio.play()\n    console.log(self.Audio.duration)\n    self.Audio.addEventListener('play',()=>{\n        console.log('paly play')\n        var stream= self.Audio.captureStream()\n        Analyser.beginAnalyse(stream,{\n        time: 5000,\n        amplitude: self.silenceDetectionAmplitude\n        },function(silenceDetected,playbackTime){\n            if(silenceDetected){\n                if(typeof onSilence=== 'function')\n                    onSilence(playbackTime)\n            }\n        })\n    })\n}\n\nAudioRecorder.prototype.exportAsBlob= function(){\n    return audioBuffer.exportBufferAsBlob(16000)\n}\n\nAudioRecorder.prototype.exportResampledAudio= function(reSampleRate,onComplete){\n    var self=this;\n    if(!self.mediaRecorder){\n        var reader= new FileReader()\n        reader.addEventListener('load',function(){\n            console.log('loading...')\n            self.context.decodeAudioData(reader.result,(buffer)=>{\n                let samplingRate= (reSampleRate && typeof reSampleRate === 'number' \n                                                    && reSampleRate >= 10000 && reSampleRate <= 20000)?reSampleRate: self.reSampleRate\n                sampleAudio.reSampleBuffer(buffer,samplingRate,(newBuffer)=>{\n                        var arrayBuffer= sampleAudio.convertFloat32ToInt16(newBuffer.getChannelData(0));\n                        if(typeof onComplete === 'function')\n                            onComplete(null,arrayBuffer)\n                        else{\n                            throw new Error('type provided as a callback is not a function')\n                        }\n                })\n            })\n        })\n\n        reader.readAsArrayBuffer(self.Blob)\n    }\n    else{\n        onComplete('recording isn\\'t stopped yet')\n    }\n}\n\nAudioRecorder.prototype.exportAsMP3= function(name='test'){\n    //TO DO\n    var self=this;\n    if(self.Blob){\n        var file= new File([self.Blob],`${name}.mp3`,{\n            type: 'audio/mpeg'\n        })\n\n        return file\n    }\n    else{\n        return null\n    }\n}\n\nAudioRecorder.prototype.pause = function (onPause) {\n    var self=this;\n    if(self.mediaRecorder && self.isPaused===false){\n        self.mediaRecorder.pause()\n        self.mediaRecorder.addEventListener('pause',function () {\n            self.Blob= new Blob(self.Chunks)\n            self.Url = URL.createObjectURL(self.Blob)\n            self.isPaused= true\n\n            // stop analyser\n            Analyser.stopAnalysing()\n\n\n            if(typeof onPause === 'function'){\n                onPause(null,self.Url,self.elapsedTime)\n                return\n            }\n            else{\n                throw new Error('callback isn\\'t a function')\n                return\n            }\n        })\n    }\n    else if(self.isPaused===true){\n        onPause('media recorder is already paused')\n    }\n    else{\n        onPause('media recorder isn\\'t started yet')\n    }\n}\n\nAudioRecorder.prototype.resume= function (onResume) {\n    var self=this;\n    if(self.mediaRecorder && self.isPaused===true){\n        self.mediaRecorder.resume()\n        self.mediaRecorder.addEventListener('resume',function () {\n            self.isPaused= false\n\n            // resume analyser\n            Analyser.resumeAnalysing()\n\n            if(typeof onResume === 'function'){\n                onResume(null,'resumed')\n                return\n            }\n            else{\n                throw new Error('callback isn\\'t a function')\n                return\n            }\n        })\n    }\n    else if(self.isPaused===false){\n        onResume('media recorder isn\\'t paused')\n    }\n    else{\n        onResume('media recorder isn\\'t started yet')\n    }\n}\n\nAudioRecorder.prototype.playAudio= function (url) {\n    var self=this;\n    if(url){\n        self.Audio= new Audio(url)\n        self.Audio.play()\n        return\n    }\n\n    if(self.Url){\n        self.Audio = new Audio(self.Url)\n        self.Audio.play()\n        return;\n    }\n\n    if(self.Blob){\n        self.Audio= new Audio(self.Blob)\n        self.Audio.play()\n         return;\n    }\n \n     console.info('audio isn\\'t ready yet')\n}\n\n\nAudioRecorder.prototype.speakText= function(payload,onStart,onFinish){\n    var self= this;\n    if(payload.text && payload.text !== undefined){\n        if(window && window.speechSynthesis ){\n             let synth= window.speechSynthesis\n             let utterance = new SpeechSynthesisUtterance(payload.text);\n             utterance.volume= 1;\n             utterance.lang= 'en-US';\n             utterance.pitch= (payload.pitch && payload.pitch >= 0 && payload.pitch <= 10)?payload.pitch:1;\n             utterance.rate= (payload.rate && payload.rate >= 0 && payload.rate <= 2)? payload.rate:1.2;\n            \n            if (speechSynthesis.onvoiceschanged !== undefined) {\n                    synth.onvoiceschanged =function(){\n                        // mark window.speechSynthesisInstances as a prototype static property\n                        if(window.speechSynthesisInstances){\n                            if(self.speechSynthesisCounterPrevious === self.speechSynthesisCounter)\n                                window.speechSynthesisInstances++;\n                        }\n                        else{\n                            window.speechSynthesisInstances=1;\n                        }\n                        \n                        self.speechSynthesisCounterPrevious= self.speechSynthesisCounter++\n\n                        let voices= (synth.getVoices && typeof synth.getVoices === 'function')?synth.getVoices(): [];\n                        \n                        utterance.voice= (payload.voice && payload.voice === 'woman')? \n                                               voices.filter(voice=> voice.name === 'Samantha')[0]:  \n                                                    voices.filter(voice=> voice.name === 'Alex')[0]\n                        \n                        synth.speak(utterance);\n                        \n                    }\n                    \n                    //synth.speak(utterance);\n                    if(self.speechSynthesisCounter>0 || window.speechSynthesisInstances>0)\n                        synth.dispatchEvent(new Event('voiceschanged'))\n            }\n            else{\n                synth.speak(utterance)\n            }\n\n\n            utterance.addEventListener('start',event=> {\n                console.log('speech has started')\n                if(typeof onStart === 'function')\n                    onStart()\n            })\n             \n\n            utterance.addEventListener('end',(event)=>{\n                console.log('end speaking...')\n                synth.cancel()\n                if(typeof onFinish === 'function')\n                    onFinish()\n            })\n        }\n        else{\n            throw new Error('not supported here');\n        }\n    }\n    else{\n        throw new Error('no text provided');\n    }\n}\n\n\nmodule.exports= AudioRecorder\n},{\"./analyser\":1,\"./audioBuffer\":2,\"./helpers\":3,\"./sampleAudio\":6}],6:[function(require,module,exports){\n(function(){\n'use strict';\n\nmodule.exports= function(self){\n\n    function reSample(audioBuffer, targetSampleRate, onComplete) {\n        var channel = audioBuffer.numberOfChannels;\n        var samples = audioBuffer.length * targetSampleRate / audioBuffer.sampleRate;\n\n        var offlineContext = new OfflineAudioContext(channel, samples, targetSampleRate);\n        var bufferSource = offlineContext.createBufferSource();\n        bufferSource.buffer = audioBuffer;\n\n        bufferSource.connect(offlineContext.destination);\n        bufferSource.start(0);\n        offlineContext.startRendering().then(function(renderedBuffer){\n          onComplete(renderedBuffer);\n        })\n    }\n\n    function convertFloat32ToInt16(buffer) {\n        var l = buffer.length;\n        console.log('buffer length: ' + l)\n        var buf = new Int16Array(l);\n        while (l--) {\n                buf[l] = Math.min(1, buffer[l]) * 0x7FFF;\n        }\n        return buf.buffer;\n    }\n\n    return {\n        reSampleBuffer: reSample,\n        convertFloat32ToInt16: convertFloat32ToInt16\n    }\n}\n})();\n},{}]},{},[4]);\n"]}